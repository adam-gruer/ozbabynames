}
out$year <- substr(fname, nchar(fname) - 4, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
browser()
out
})
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x))){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
browser()
out$year <- substr(fname, nchar(fname) - 4, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
out
})
substr(fname, nchar(fname) - 4, nchar(fname))
fname
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x))){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
browser()
out$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
out
})
out$year
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x))){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
browser()
out$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
out
})
out
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x))){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
browser()
$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
out
})
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x))){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
out
})
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x))){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
browser()
})
out
devtools::load_all(".")
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x)[1])){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
browser()
})
out
out
devtools::load_all(".")
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(is.null(out$Sex)){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x)[1])){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
browser()
})
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(!("Sex" %in% colnames(out))){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x)[1])){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- substr(fname, nchar(fname) - 3, nchar(fname))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
browser()
})
out
out$Year
out$Year %>% as.numeric
devtools::load_all(".")
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(!("Sex" %in% colnames(out))){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x)[1])){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- as.numeric(substr(fname, nchar(fname) - 3, nchar(fname)))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
})
qld
qld %>%
rename(Sex = sex, name = Name, year = Year, count = Count)
qld %>%
rename(sex = Sex, name = Name, year = Year, count = Count)
qld %>%
rename(sex = Sex, name = Name, year = Year, count = Count) %>%
mutate(sex = as.factor(sex))
qld <- qld %>%
rename(sex = Sex, name = Name, year = Year, count = Count) %>%
mutate(sex = as.factor(sex))
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(!("Sex" %in% colnames(out))){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x)[1])){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- as.numeric(substr(fname, nchar(fname) - 3, nchar(fname)))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
}) %>%
rename(sex = Sex, name = Name, year = Year, count = Count) %>%
mutate(sex = as.factor(sex))
usethis::use_data(qld)
qld
usethis::use_data(qld)
qld
# Fix files
qld <- map_dfr(fs::dir_ls("data-raw/qld"), function(x){
fname <- tools::file_path_sans_ext(x)
out <- read_csv(x)
if(!("Sex" %in% colnames(out))){
out <- list(out[1:2], out[3:4]) %>%
map_dfr(function(x){
if(grepl("Girl", colnames(x)[1])){
x$Sex <- "Female"
}
else{
x$Sex <- "Male"
}
x$year <- as.numeric(substr(fname, nchar(fname) - 3, nchar(fname)))
colnames(x) <- c("Name", "Count", "Sex", "Year")
x
})
}
}) %>%
rename(sex = Sex, name = Name, year = Year, count = Count) %>%
select(sex, name, year, count) %>%
mutate(sex = as.factor(sex))
usethis::use_data(qld, overwrite = TRUE)
qld
library(rvest)
library(polite)
bow("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
site <- bow("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
site %>% scrape
web <- site %>% scrape
web
web %>% html_node("select")
web %>% html_node(".select")
web %>% html_node("#select")
web %>% html_node("select")
web$doc
web$node
web$node[[1]]
rvest::html_form(web)
form <- rvest::html_form(web)[[2]]
rvest::set_values(form, MasterContent_pageContent_ddlHistoricalYears = 2016)
rvest::set_values(form, `ctl00$ctl00$MasterContent$pageContent$hidBaseYear`` = 2016)
rvest::set_values(form, `ctl00$ctl00$MasterContent$pageContent$hidBaseYear` = 2016)
form
y16 <- rvest::set_values(form, `ctl00$ctl00$MasterContent$pageContent$hidBaseYear` = 2016)
submit_form(y16)
submit_form(web, y16)
submit_form(web, y16, "ctl00$ctl00$MasterContent$pageContent$btnHistoryGo")
web
session <- html_session("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
form <- rvest::html_form(session)[[2]]
form
rvest::html_form(session)
y16 <- rvest::set_values(form, `ctl00$ctl00$MasterContent$pageContent$hidBaseYear` = 2016)
submit_form(web, y16, "ctl00$ctl00$MasterContent$pageContent$btnHistoryGo")
submit_form(web, y16)
form
y16 <- rvest::set_values(form, `ctl00$ctl00$MasterContent$pageContent$ddlHistoricalYears` = 2016)
submit_form(web, y16)
debug(rvest:::submit_request)
submit_form(web, y16)
submit_form(web, y16)
submits
form$fields
class(form)
form <- rvest::html_form(session)[[2]]
forma
form
rvest::html_form(session)
readr::parse_number("asdfl 324a dasf")
session <- html_session("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
rvest::html_form(session)
install.packages("RSelenium")
library(RSelenium)
vignette(package= "RSelenium")
vignette("basics", package= "RSelenium")
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "firefox"
)
remDr
remDr$open()
remDr$open()
remDr$navigate("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
remDr$getCurrentUrl
remDr$getCurrentUrl()
remDr$findElement(using = "id", value = "MasterContent_pageContent_ddlHistoricalYears")
remDr$findElement(using = "name", value = "ctl00$ctl00$MasterContent$pageContent$ddlHistoricalYears")
remDr$findElement(using = "xpath", value = "//*/option[@value = '1990']")
remDr$findElement(using = "xpath", value = "//*/option[@value = '1990']")
remDr$findElement(using = "xpath", value = "/option[@value = '1990']")
remDr$findElement(using = "xpath", value = "/option[@value = "1990"]")
remDr$findElement(using = "xpath", value = '/option[@value = "1990"]')
remDr$findElement(using = "xpath", value = '/option[@value = 1990]')
remDr$findElement(using = "xpath", value = '//*/option[@value = "1990"]')
remDr$getCurrentUrl()
remDr$getCurrentUrl()
remDr$findElement(using = "xpath", value = '//*/option[@value = "1990"]')
remDr$navigate("http://www.squawka.com/match-results")
option <- remDr$findElement(using = 'xpath', "//*/option[@value = '9']")
remDr$navigate("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
remDr$getCurrentUrl()
remDr$findElement(using = "id", value = "MasterContent_pageContent_lblHistoricalYears")
remDr$screenshot()
remDr$screenshot(file = "a.png")
remDr$executeScript("__doPostBack('ctl00$ctl00$MasterContent$pageContent$lbtHistoricalSearch','')")
remDr$navigate("http://www.squawka.com/match-results")
remDr$navigate("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
remDr$executeScript("__doPostBack('ctl00$ctl00$MasterContent$pageContent$lbtHistoricalSearch','')")
remDr$screenshot(file = "a.png")
remDr$findElement(using = "id", value = "MasterContent_pageContent_lblHistoricalYears")
option <- remDr$findElement(using = 'xpath', "//*/option[@value = '1990']")
option$clickElement()
remDr$screenshot(file = "a.png")
btn <- remDr$findElement(using = 'id', 'MasterContent_pageContent_btnHistoryGo')
btn$clickElement()
remDr$screenshot(file = "a.png")
session
session %>%
follow_link("Search past years")
remDr$findElement(using = 'id', 'MasterContent_pageContent_grvGirlsResults')
girls <- remDr$findElement(using = 'id', 'MasterContent_pageContent_grvGirlsResults')
girls$getElementText()
girls$getPageSource()
doc <- htmlParse(remDr$getPageSource()[[1]])
doc <- XML::htmlParse(remDr$getPageSource()[[1]])
XML::readHTMLTable(doc)
doc
doc %>% class
remDr$getPageSource()
remDr$getPageSource() %>% class
remDr$getPageSource()[[1]]
remDr$getPageSource()[[2]]
remDr$getPageSource()[[1]]
read_xml(remDr$getPageSource()[[1]])
read_html(remDr$getPageSource()[[1]])
html <- read_html(remDr$getPageSource()[[1]])
html_table(html)
remDr$findElement(using = 'id', 'MasterContent_pageContent_ddlHistoricalYears')
dropdown <- remDr$findElement(using = 'id', 'MasterContent_pageContent_ddlHistoricalYears')
dropdown$getElementText
dropdown$getElementText()
remDr$getPageSource
remDr$getPageSource()
remDr$getPageSource()[[1]]
read_html(remDr$getPageSource()[[1]])
html_nodes(read_html(remDr$getPageSource()[[1]]), "MasterContent_pageContent_ddlHistoricalYears")
html_nodes(read_html(remDr$getPageSource()[[1]]), ".MasterContent_pageContent_ddlHistoricalYears")
html_nodes(read_html(remDr$getPageSource()[[1]]), "#MasterContent_pageContent_ddlHistoricalYears")
html_nodes(read_html(remDr$getPageSource()[[1]]), "#MasterContent_pageContent_ddlHistoricalYears") %>%
html_text()
html_nodes(read_html(remDr$getPageSource()[[1]]), "#MasterContent_pageContent_ddlHistoricalYears") %>%
html_children()
html_nodes(read_html(remDr$getPageSource()[[1]]), "#MasterContent_pageContent_ddlHistoricalYears") %>%
html_children() %>%
html_text()
years <- html_nodes(read_html(remDr$getPageSource()[[1]]), "#MasterContent_pageContent_ddlHistoricalYears") %>%
html_children() %>%
html_text()
html_table(html)
year <- years[[2]]
year
option <- remDr$findElement(using = 'xpath', sprintf("//*/option[@value = '%s']", year))
option$clickElement()
btn <- remDr$findElement(using = 'id', 'MasterContent_pageContent_btnHistoryGo')
btn$clickElement()
html <- read_html(remDr$getPageSource()[[1]])
html_table(html)
tbl <- html_table(html)
bind_rows(
tbl[[2]] %>% mutate(sex = "Female"),
tbl[[3]] %>% mutate(sex = "Male")
) %>%
mutate(Year = year)
bind_rows(
tbl[[2]] %>% mutate(sex = "Female"),
tbl[[3]] %>% mutate(sex = "Male")
) %>%
mutate(year = year)
wa <- map_dfr(years[2:3], function(year){
option <- remDr$findElement(using = 'xpath', sprintf("//*/option[@value = '%s']", year))
option$clickElement()
btn <- remDr$findElement(using = 'id', 'MasterContent_pageContent_btnHistoryGo')
btn$clickElement()
html <- read_html(remDr$getPageSource()[[1]])
tbl <- html_table(html)
bind_rows(
tbl[[2]] %>% mutate(sex = "Female"),
tbl[[3]] %>% mutate(sex = "Male")
) %>%
mutate(year = year)
})
wa
wa <- map_dfr(years[-1], function(year){
option <- remDr$findElement(using = 'xpath', sprintf("//*/option[@value = '%s']", year))
option$clickElement()
btn <- remDr$findElement(using = 'id', 'MasterContent_pageContent_btnHistoryGo')
btn$clickElement()
html <- read_html(remDr$getPageSource()[[1]])
tbl <- html_table(html)
bind_rows(
tbl[[2]] %>% mutate(sex = "Female"),
tbl[[3]] %>% mutate(sex = "Male")
) %>%
mutate(year = year)
})
wa
usethis::use_data(wa)
library(purrr)
library(tidyverse)
library(rvest)
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445L,
browserName = "firefox"
)
remDr$open()
remDr$navigate("https://bdm.justice.wa.gov.au/_apps/BabyNames/Default.aspx")
remDr$getCurrentUrl()
remDr$executeScript("__doPostBack('ctl00$ctl00$MasterContent$pageContent$lbtHistoricalSearch','')")
years <- html_nodes(read_html(remDr$getPageSource()[[1]]), "#MasterContent_pageContent_ddlHistoricalYears") %>%
html_children() %>%
html_text()
years
wa <- map_dfr(years[-1], function(year){
option <- remDr$findElement(using = 'xpath', sprintf("//*/option[@value = '%s']", year))
option$clickElement()
btn <- remDr$findElement(using = 'id', 'MasterContent_pageContent_btnHistoryGo')
btn$clickElement()
html <- read_html(remDr$getPageSource()[[1]])
tbl <- html_table(html)
bind_rows(
tbl[[2]] %>% mutate(sex = "Female"),
tbl[[3]] %>% mutate(sex = "Male")
) %>%
mutate(year = year)
})
wa
usethis::use_vignette("presentation")
desc::desc("babynames")
desc::desc("babyname")
library(fontawesome)
library(fontawesome)
options(htmltools.dir.version = FALSE, width = 120)
read_csv("data-raw/qld/20180123_BDM_Top-100-Baby-Names-2017.csv")
library(tidyverse)
read_csv("data-raw/qld/20180123_BDM_Top-100-Baby-Names-2017.csv")
read_csv("data-raw/qld/20180718_BDM_Top-100-Baby-Names-1960-to-2005.csv")
fs::dir_ls("data-raw/sa")
